<subsystem xmlns="urn:jboss:domain:messaging-activemq:3.0">
    <global-client thread-pool-max-size="${global.client.thread-pool-max-size:32}"
                   scheduled-thread-pool-max-size="${global.client.scheduled.thread-pool-max-size:54}" />
    <server name="default"
            default-thread-pool="default"
            default-scheduled-thread-pool="default">

        <security elytron-domain="elytronDomain"/>
        <cluster user="testuser">
            <credential-reference store="cs1" alias="testuser"/>
        </cluster>
        <journal datasource="fooDS"
                 database="mysql"
                 jdbc-network-timeout="4567"
                 messages-table="MY_MESSAGES"
                 bindings-table="MY_BINDINGS"
                 jms-bindings-table="MY_JMS_BINDINGS"
                 large-messages-table="MY_LARGE_MESSAGES"
                 page-store-table="MY_PAGE_STORE" />

        <unbounded-queue-thread-pool name="default"
                                     max-threads="128"
                                     thread-factory="regular">
            <keepalive-time time="100" unit="milliseconds"/>
        </unbounded-queue-thread-pool>

        <scheduled-thread-pool name="default"
                               max-threads="${scheduled.max.threads:35}"
                               thread-factory="default">
            <keepalive-time time="100" unit="milliseconds"/>
        </scheduled-thread-pool>

        <thread-factory name="default"
                        group-name="Artemis threads"
                        priority="3"
                        thread-name-pattern="%i-%g"/>

        <replication-colocated>
            <master />
        </replication-colocated>

        <http-connector name="http"
                        socket-binding="http"
                        endpoint="http"
                        server-name="=foo">
            <param name="batch-delay" value="${batch.delay:50}"/>
        </http-connector>

        <cluster-connection name="cc1"
                            address="${address:cc1-address}"
                            connector-name="netty"
                            producer-window-size="${producer.windows.size:5678}"
                            static-connectors="in-vm netty" />

        <bridge name="bridge1"
                queue-name="${queue.name:coreQueueA}"
                forwarding-address="${forwarding.address:forwardingaddress1}"
                producer-window-size="${producer.windows.size:5678}"
                static-connectors="in-vm netty"
                user="${user:Brian}">
            <credential-reference clear-text="secret1"/>
        </bridge>
        <bridge name="bridge2"
                queue-name="${queue.name:coreQueueA}"
                forwarding-address="${forwarding.address:forwardingaddress1}"
                producer-window-size="${producer.windows.size:5678}"
                static-connectors="in-vm netty"
                user="${user:Brian}"
                password="${password:secret}">
        </bridge>

        <connection-factory name="otherConnectionFactory"
                            discovery-group="groupC"
                            entries="otherConnectionFactory"
                            deserialization-black-list="org.foo.Bar org.foo.Baz"
                            deserialization-white-list="org.bar.Bar org.baz.Baz"
                            initial-message-packet-size="${initial.message.packet.size:12345}"/>

        <pooled-connection-factory name="hornetq-ra-local"
                                   transaction="local"
                                   user="alice"
                                   password="alicepassword"
                                   connectors="in-vm"
                                   entries="java:/JmsLocal"
                                   statistics-enabled="true">
            <inbound-config
                    rebalance-connections="true" />
            <outbound-config
                    allow-local-transactions="true" />

        </pooled-connection-factory>
        <pooled-connection-factory name="pcf-with-credential-reference"
                                   entries="java:/JmsLocal2"
                                   connectors="in-vm"
                                   user="foo"
                                   deserialization-black-list="org.foo.Bar org.foo.Baz"
                                   deserialization-white-list="org.bar.Bar org.baz.Baz">
            <credential-reference clear-text="passwordOut!"/>
        </pooled-connection-factory>
    </server>
    <server name="other">
        <replication-master />
    </server>
</subsystem>
